{"version":3,"sources":["components/Search/Search.module.css","components/ModalWindow/ModalWindow.module.css","components/Users/Users.module.css","api/api.ts","bll/user-reducer.ts","components/Search/Search.tsx","components/ModalWindow/ModalWindow.tsx","components/SuperSpan/SuperSpan.tsx","components/Users/Users.tsx","components/Users/UserTable.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","usersApi","axios","get","initialState","users","userCompany","name","catchPhrase","bs","userAddress","street","suite","city","zipcode","geo","lat","lng","currentUser","searchValue","SET_USERS","DELETE_USER","SET_USER_INFORMATION","SET_SEARCH_VALUE","getUsers","dispatch","a","response","setUser","data","console","log","type","setUserInformation","company","setSearchValue","value","Search","useDispatch","useSelector","state","className","style","inputContainer","onChange","e","currentTarget","placeholder","ModalWindow","props","userName","closeWindowHandler","closeModalWindow","general","window","information","informationText","buttonContainer","onClick","background","SuperSpan","result","match","start","index","find","input","length","undefined","rest","slice","backgroundColor","User","id","email","deleteUser","activeModalWindow","address","buttonTh","button","UsersTable","useState","activeModal","setActiveModal","deleteUserHandler","filteredUsers","filter","user","includes","username","map","App","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53250c5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Search_inputContainer__lAHaH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"ModalWindow_general__3HKM0\",\"window\":\"ModalWindow_window__33NV1\",\"background\":\"ModalWindow_background__2E544\",\"information\":\"ModalWindow_information__3P-Zo\",\"informationText\":\"ModalWindow_informationText__2GTKz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Users_button__2Z3vx\",\"name\":\"Users_name__Fi--j\",\"buttonTh\":\"Users_buttonTh__2KHU_\"};","import axios from \"axios\"\r\n\r\nimport { UserType } from \"../bll/user-reducer\"\r\n\r\n\r\n\r\nexport const usersApi = {\r\n    getUsers () {\r\n        return axios.get<UserType[]>('https://jsonplaceholder.typicode.com/users')\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\n\r\nimport { ActionType } from \"./store\"\r\nimport { usersApi } from \"../api/api\"\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    userCompany: {\r\n        name:'',\r\n        catchPhrase:'',\r\n        bs:''\r\n    },\r\n    userAddress: {\r\n        street:'',\r\n        suite:'',\r\n        city:'',\r\n        zipcode:'',\r\n        geo: {\r\n            lat:'',\r\n            lng:''\r\n        },\r\n    },\r\n    currentUser:'',\r\n    searchValue:''\r\n}\r\n\r\nexport const usersReducer = (state:InitialStateType = initialState, action:ActionType):InitialStateType => {\r\n    switch(action.type) {\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users:[...action.users]\r\n            }\r\n        }\r\n        case DELETE_USER: {\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user => user.id !== action.id)\r\n            }\r\n        }\r\n        case SET_USER_INFORMATION: {\r\n            return {\r\n                ...state,\r\n                currentUser: action.currentUser,\r\n                userCompany: {\r\n                    ...state.userCompany,\r\n                    ...action.company\r\n                },\r\n                userAddress: {\r\n                    ...action.userAddress,\r\n                    geo:{\r\n                        ...action.userAddress.geo\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        case SET_SEARCH_VALUE: {\r\n            return {\r\n                ...state,\r\n                searchValue:action.value\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\n//ActionType\r\nconst SET_USERS = \"USERS/SET-USERS\"\r\nconst DELETE_USER = \"USERS/DELETE-USER\"\r\nconst SET_USER_INFORMATION = \"USERS/SET-USER-INFORMATION\"\r\nconst SET_SEARCH_VALUE = \"USERS/SET-SEARCH-VALUE\"\r\n\r\n//thunk\r\nexport const getUsers = () => async (dispatch:Dispatch) => {\r\n    try {\r\n        const response = await usersApi.getUsers()\r\n        dispatch(setUser(response.data))\r\n    }\r\n    catch(error) {\r\n        console.log(\"Some Error\")\r\n    }\r\n}\r\n//ActionsCreator\r\nconst setUser = (users: UserType[]) => ({type:SET_USERS, users} as const)\r\nexport const deleteUser = (id:number) => ({type:DELETE_USER, id} as const)\r\nexport const setUserInformation = (company:CompanyType, currentUser:string, userAddress:AddressType) =>\r\n    ({type:SET_USER_INFORMATION, company, currentUser, userAddress} as const)\r\nexport const setSearchValue = (value:string) => ({type:SET_SEARCH_VALUE, value} as const)\r\n\r\n//types\r\nexport type UserReducerType =  |\r\n    ReturnType <typeof setUser> |\r\n    ReturnType <typeof deleteUser> |\r\n    ReturnType <typeof setUserInformation> |\r\n    ReturnType <typeof setSearchValue>\r\n\r\n\r\ntype InitialStateType = {\r\n    users: UserType[]\r\n    userCompany: CompanyType\r\n    currentUser:string\r\n    searchValue:string\r\n    userAddress:AddressType\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    username: string\r\n    email: string\r\n    address: AddressType\r\n    phone: string\r\n    website: string\r\n    company: CompanyType\r\n}\r\nexport type CompanyType = {\r\n    name:string\r\n    catchPhrase:string\r\n    bs:string\r\n}\r\n\r\nexport type AddressType = {\r\n    street:string\r\n    suite:string\r\n    city:string\r\n    zipcode:string\r\n    geo:GeoType\r\n}\r\ntype GeoType = {\r\n    lat:string\r\n    lng:string\r\n}\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {ChangeEvent} from \"react\";\r\n\r\nimport {AppStateType} from \"../../bll/store\";\r\n\r\nimport style from './Search.module.css'\r\nimport {setSearchValue} from \"../../bll/user-reducer\";\r\n\r\n\r\n\r\nexport function Search() {\r\n\r\n    const dispatch = useDispatch()\r\n    const searchValue = useSelector<AppStateType, string>(state => state.users.searchValue)\r\n\r\n    const onChangeHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setSearchValue(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={style.inputContainer}>\r\n            <input value={searchValue} onChange={onChangeHandler} placeholder='Search'/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../bll/store';\r\nimport {AddressType, CompanyType} from '../../bll/user-reducer';\r\nimport style from './ModalWindow.module.css'\r\n\r\n\r\ntype ModalPropsType = {\r\n    closeModalWindow: () => void;\r\n}\r\n\r\nexport const ModalWindow = (props: ModalPropsType) => {\r\n\r\n\r\n    const userName = useSelector<AppStateType, string>(state => state.users.currentUser)\r\n    const userCompany = useSelector<AppStateType, CompanyType>(state => state.users.userCompany)\r\n    const userAddress = useSelector<AppStateType, AddressType>(state => state.users.userAddress)\r\n\r\n    const closeWindowHandler = () => {\r\n        props.closeModalWindow()\r\n    }\r\n\r\n    return (\r\n        <div className={style.general}>\r\n            <div className={style.window}>\r\n                <h4>Information about {userName}</h4>\r\n                <div className={style.information}>\r\n                    <div>Name: <span className={style.informationText}>{userCompany.name}</span></div>\r\n                    <div>CatchPhrase: <span className={style.informationText}>{userCompany.catchPhrase}</span></div>\r\n                    <div>City: <span className={style.informationText}>{userAddress.city}</span></div>\r\n                    <div>Street: <span className={style.informationText}>{userAddress.street}</span></div>\r\n                    <div>Suite: <span className={style.informationText}>{userAddress.suite}</span></div>\r\n                    <div>Zipcode: <span className={style.informationText}>{userAddress.zipcode}</span></div>\r\n                    <div>Geo/Lat: <span className={style.informationText}>{userAddress.geo.lat}</span></div>\r\n                    <div>Geo/Lng: <span className={style.informationText}>{userAddress.geo.lng}</span></div>\r\n                </div>\r\n                <div className={style.buttonContainer}>\r\n                    <button onClick={closeWindowHandler}>Cancel</button>\r\n                </div>\r\n            </div>\r\n            <div onClick={closeWindowHandler} className={style.background}/>\r\n        </div>\r\n\r\n    )\r\n}","\r\n\r\n\r\n\r\ntype SuperSpanType = {\r\n    name: string\r\n    searchValue: string\r\n}\r\n\r\nexport const SuperSpan = (props:SuperSpanType) => {\r\n\r\n    const{name, searchValue} = props\r\n\r\n    const result = name.match(searchValue)\r\n\r\n    if (result) {\r\n        const start = result.index\r\n        const find = result[0]\r\n        const input = result.input\r\n        const length = result.length\r\n        if (start !== undefined && find && input && length) {\r\n            const rest = start + find.length\r\n            return (\r\n                <span>\r\n                    <span>{input.slice(0, start)}</span>\r\n                    <span style={{backgroundColor: \"red\"}}>{find}</span>\r\n                    <span>{input.slice(rest)}</span>\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n    return <span>{props.name}</span>\r\n}","import {AddressType, CompanyType} from \"../../bll/user-reducer\"\r\nimport {SuperSpan} from \"../SuperSpan/SuperSpan\";\r\n\r\nimport style from '../Users/Users.module.css'\r\n\r\n\r\n\r\ntype UserPropsType = {\r\n    id: number\r\n    name: string\r\n    userName: string\r\n    email: string\r\n    company: CompanyType\r\n    deleteUser: (id: number) => void\r\n    activeModalWindow: (company: CompanyType, name: string, address:AddressType) => void\r\n    searchValue: string\r\n    address:AddressType\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n\r\n    const {id, name, userName, email, deleteUser, activeModalWindow,\r\n        company, searchValue, address} = props\r\n\r\n    const deleteUserHandler = () => { deleteUser(id) }\r\n    const activeModalHandler = () => { activeModalWindow(company, name,address) }\r\n\r\n    return (\r\n        <tr>\r\n            <td className={style.name} onClick={activeModalHandler}>\r\n                <SuperSpan searchValue={searchValue} name={name}/>\r\n            </td>\r\n            <td>\r\n                <SuperSpan searchValue={searchValue} name={userName}/>\r\n            </td>\r\n            <td>\r\n                <SuperSpan searchValue={searchValue} name={email}/>\r\n            </td>\r\n            <td className={style.buttonTh}>\r\n                <button className={style.button} onClick={deleteUserHandler}>\r\n                    DELETE\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import {useDispatch, useSelector} from 'react-redux';\r\nimport {useState} from 'react';\r\n\r\nimport {\r\n    AddressType,\r\n    CompanyType,\r\n    deleteUser,\r\n    getUsers,\r\n    setSearchValue,\r\n    setUserInformation,\r\n    UserType\r\n} from '../../bll/user-reducer'\r\nimport {AppStateType} from '../../bll/store';\r\nimport {ModalWindow} from \"../ModalWindow/ModalWindow\";\r\nimport {User} from \"./Users\";\r\n\r\nimport style from './Users.module.css'\r\n\r\n\r\nexport const UsersTable = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const users = useSelector<AppStateType, UserType[]>(state => state.users.users)\r\n    const searchValue = useSelector<AppStateType, string>(state => state.users.searchValue)\r\n\r\n    const activeModalWindow = (company: CompanyType, name: string, address:AddressType) => {\r\n        setActiveModal(true)\r\n        dispatch(setUserInformation(company, name, address))\r\n    }\r\n\r\n\r\n    const closeModalWindow = () => {\r\n        const nullCompany = {\r\n            name: '',\r\n            catchPhrase: '',\r\n            bs: ''\r\n        }\r\n        const nullAddress = {\r\n                street:'',\r\n                suite:'',\r\n                city:'',\r\n                zipcode:'',\r\n                geo: {\r\n                    lat:'',\r\n                    lng:''\r\n                }\r\n        }\r\n\r\n        setActiveModal(false)\r\n        dispatch(setUserInformation(nullCompany, '', nullAddress ))\r\n    }\r\n\r\n    const deleteUserHandler = (id: number) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const resetUserHandler = () => {\r\n        dispatch(getUsers())\r\n        dispatch(setSearchValue(''))\r\n    }\r\n\r\n    const filteredUsers = users.filter(user =>\r\n        user.name.includes(searchValue) ||\r\n        user.username.includes(searchValue) ||\r\n        user.email.includes(searchValue))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>NameUser</th>\r\n                    <th>Email</th>\r\n                    <th className={style.buttonTh}>\r\n                        <button onClick={resetUserHandler} className={style.button}>\r\n                            RESET\r\n                        </button>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {filteredUsers.map(user => <User key={user.id}\r\n                                                 id={user.id}\r\n                                                 name={user.name}\r\n                                                 userName={user.username}\r\n                                                 deleteUser={deleteUserHandler}\r\n                                                 activeModalWindow={activeModalWindow}\r\n                                                 email={user.email}\r\n                                                 searchValue={searchValue}\r\n                                                 company={user.company}\r\n                                                 address={user.address}\r\n                    />\r\n                )}\r\n                </tbody>\r\n            </table>\r\n            {activeModal && <ModalWindow closeModalWindow={closeModalWindow}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {getUsers} from './bll/user-reducer';\n\nimport {Search} from './components/Search/Search'\nimport {UsersTable} from \"./components/Users/UserTable\";\n\n\nfunction App() {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [dispatch])\n\n    return (\n            <div>\n                <Search/>\n                <UsersTable/>\n            </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nimport { usersReducer, UserReducerType } from './user-reducer'\r\n\r\n\r\n\r\n\r\nexport type ActionType = UserReducerType\r\n\r\nconst reducer = combineReducers({\r\n    users:usersReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType <typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}